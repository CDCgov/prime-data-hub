name: Prime Data Hub

on:
  pull_request:
    branches: [ master, production ]

defaults:
  run:
    working-directory: prime-router

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set Environment Variables
        run: |
               if [ "$GITHUB_BASE_REF" == "production" ]
               then
                   echo "Building for the production environment."
                   echo >> $GITHUB_ENV RESOURCE_GROUP=prime-data-hub-prod
                   echo >> $GITHUB_ENV ACR_REPO=primedatahubprodprimedevregistry.azurecr.io
                   echo >> $GITHUB_ENV POSTGRESQL_USER=${{ secrets.POSTGRESQL_PROD_USER }}
                   echo >> $GITHUB_ENV POSTGRESQL_PWD=${{ secrets.POSTGRESQL_PROD_PWD }}
               else
                   echo "Building for the test environment."
                   echo >> $GITHUB_ENV RESOURCE_GROUP=prime-data-hub-test
                   echo >> $GITHUB_ENV ACR_REPO=primedatahubtestprimedevregistry.azurecr.io
                   echo >> $GITHUB_ENV POSTGRESQL_USER=${{ secrets.POSTGRESQL_TEST_USER }}
                   echo >> $GITHUB_ENV POSTGRESQL_PWD=${{ secrets.POSTGRESQL_TEST_PWD }}
               fi

      - name: Setup PostgreSQL
        uses: Harmon758/postgresql-action@0be19fa37850b22cb4c9bbf28a03abbf44abd863
        with:
          postgresql version: 11
          postgresql db: prime_data_hub
          postgresql user: ${{ env.POSTGRESQL_USER }}
          postgresql password: ${{ env.POSTGRESQL_PWD }}
       
      - name: Setup JDK
        uses: actions/setup-java@v1.4.3
        with:
           java-version: 11
      
      - name: Build Maven Package
        run: mvn -B clean package --file pom.xml

      - name: Build Docker Image
        run: docker build . --file Dockerfile --tag ${{ env.ACR_REPO }}/${{ env.RESOURCE_GROUP }}:latest
      
      - name: Login to Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.SERVICE_PRINCIPAL_CREDS }}
        
      - name: ACR Login
        run: az acr login --name ${{ env.ACR_REPO }}/${{ env.RESOURCE_GROUP }}
          
      - name : Push Docker Image
        run: docker push ${{ env.ACR_REPO }}/${{ env.RESOURCE_GROUP }}:latest
