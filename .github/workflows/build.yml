name: Prime Data Hub

on:
  pull_request:
    branches: [ test, production ]

defaults:
  run:
    working-directory: prime-router

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - name: Set Environment Variables
        run: |
               if [ "$GITHUB_BASE_REF" == "production" ]
               then
                   echo "Building for the production environment."
                   export RESOURCE_GROUP=prime-data-hub
                   export ACR_REPO=primedatahubregistry
                   echo $RESOURCE_GROUP $ACR_REPO
               else
                   echo "Building for the test environment."
                   export RESOURCE_GROUP=prime-data-hub-test
                   export ACR_REPO=primedatahubtestprimedevregistry.azurecr.io
                   echo $RESOURCE_GROUP $ACR_REPO
               fi
               env
      - name: Echo Variables
        run: echo $RESOURCE_GROUP $ACR_REPO
      # - name: Setup PostgreSQL
      #   uses: Harmon758/postgresql-action@0be19fa37850b22cb4c9bbf28a03abbf44abd863
      #   with:
      #     postgresql version: 11
      #     postgresql db: prime_data_hub
      #     postgresql user: ${{ secrets.POSTGRESQL_TEST_USER }}
      #     postgresql password: ${{ secrets.POSTGRESQL_TEST_PWD }}
       
      # - name: Setup JDK
      #   uses: actions/setup-java@v1.4.3
      #   with:
      #      java-version: 11
      
      # - name: Build Maven Package
      #   run: mvn -B clean package --file pom.xml

      # - name: Build Docker Image
      #   run: docker build . --file Dockerfile --tag $ACR_REPO/$RESOURCE_GROUP:latest
      
      # - name: Login to Azure CLI
      #   uses: azure/login@v1
      #   with:
      #     creds: ${{ secrets.SERVICE_PRINCIPAL_CREDS }}
        
      # - name: ACR Login
      #   run: az acr login --name $ACR_REPO/$RESOURCE_GROUP
          
      # - name : Push Docker Image
      #   run: docker push $ACR_REPO/$RESOURCE_GROUP:latest
