name: Release to Azure

on:
  push:
    branches:
      - master
      - production
      - dev-rheft

defaults:
  run:
    working-directory: prime-router

jobs:
  build_release:
    name: "Release: Build Router"
    runs-on: ubuntu-latest
    env:
      # These are for CI and not credentials of any system
      POSTGRES_USER: prime
      POSTGRES_PASSWORD: changeIT!
    steps:
      - name: "Check out changes"
        uses: actions/checkout@v2

      - name: Set Environment Variables
        run: |
          echo >> $GITHUB_ENV DB_USER=${POSTGRES_USER}
          echo >> $GITHUB_ENV DB_PASSWORD=${POSTGRES_PASSWORD}

      # Appears not to be needed on GitHub (but needed when running act [https://github.com/nektos/act] locally)
      # - name: Install docker-compose
      #   run: apt-get update && apt-get --yes install docker-compose

      - name: Build Prime Router Package
        run: bash ./build.sh -- gradle clean package

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          # This path is from the root of the repo as needed by the plugin
          files: prime-router/build/test-results/test/**/*.xml

      - name: Run Integration Tests
        run: bash ./gradlew testIntegration -Pshowtests

      - name: Publish Integration Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          # This path is from the root of the repo as needed by the plugin
          files: prime-router/build/test-results/testIntegration/**/*.xml
          check_name: "Integration Test Results"

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: prime-router-build-${{ github.run_id }}
          path: prime-router/build
          retention-days: 7

  build_frontend_release:
    name: "Release: Build Frontend"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
      - name: "Check out changes"
        uses: actions/checkout@v2

      - name: Run Build Script
        run: bash ci_build.bash

      - name: Save Static Website
        uses: actions/upload-artifact@v2
        with:
          name: static_website-${{ github.run_id }}
          path: frontend/dist
          retention-days: 7

      - name: Validate static website server
        run: bash ci_validate.bash

  deploy_release_dev:
    name: "Deploy Release: DEV"
    needs:
      - build_release
      - build_frontend_release
    if: github.ref == 'refs/heads/dev-rheft'
    environment: staging
    runs-on: ubuntu-latest
    env:
      RESOURCE_GROUP: prime-dev-rheft
      ACR_REPO: rheftcontainerregistry.azurecr.io
      PREFIX: rheft
    steps:
      - name: "Check out changes"
        uses: actions/checkout@v2

      - name: Download Router Artifact
        uses: actions/download-artifact@v2
        with:
          name: prime-router-build-${{ github.run_id }}
          path: prime-router/build

      - name: Download Frontend Artifact
        uses: actions/download-artifact@v2
        with:
          name: static_website-${{ github.run_id }}
          path: frontend/dist

      - name: Build Docker Image
        run: docker build . --file Dockerfile --tag ${{ env.ACR_REPO }}/${{ env.PREFIX }}:latest

      - name: Install OpenVPN
        run: |
          sudo apt-get update
          sudo apt-get install openvpn
          sudo apt install openvpn-systemd-resolved

      - name: Connect VPN
        uses: golfzaptw/action-connect-ovpn@master
        id: connect_vpn
        with:
          PING_URL: "127.0.0.1"
          FILE_OVPN: ".github/vpn/dev.ovpn"
          TLS_KEY: ${{ secrets.TLS_KEY }}
        env:
          CA_CRT: ${{ secrets.CA_CRT}}
          USER_CRT: ${{ secrets.USER_CRT }}
          USER_KEY: ${{ secrets.USER_KEY }}

      - name: Login to Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.SERVICE_PRINCIPAL_CREDS }}

      - name: ACR Login
        run: az acr login --name ${{ env.ACR_REPO }}

      - name: Push Docker Image
        run: docker push ${{ env.ACR_REPO }}/${{ env.PREFIX }}:latest

      - name: Restart Azure Functions App
        run: az functionapp restart --resource-group ${{ env.RESOURCE_GROUP }} --name ${{ env.PREFIX }}-functionapp

      - name: Upload Static Site
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az storage blob upload-batch --account-name ${{ env.PREFIX }}public -d '$web' -s frontend/dist

  deploy_release_staging:
    name: "Deploy Release: STAGING"
    needs:
      - build_release
      - build_frontend_release
    if: github.ref == 'refs/heads/master'
    environment: staging
    runs-on: ubuntu-latest
    env:
      RESOURCE_GROUP: prime-data-hub-staging
      ACR_REPO: pdhstagingcontainerregistry.azurecr.io
      PREFIX: pdhstaging
    steps:
      - name: "Check out changes"
        uses: actions/checkout@v2

      - name: Download Router Artifact
        uses: actions/download-artifact@v2
        with:
          name: prime-router-build-${{ github.run_id }}
          path: prime-router/build

      - name: Download Frontend Artifact
        uses: actions/download-artifact@v2
        with:
          name: static_website-${{ github.run_id }}
          path: frontend/dist

      - name: Build Docker Image
        run: docker build . --file Dockerfile --tag ${{ env.ACR_REPO }}/${{ env.PREFIX }}:latest

      - name: Install OpenVPN
        run: |
          sudo apt-get update
          sudo apt-get install openvpn
          sudo apt install openvpn-systemd-resolved

      - name: Connect VPN
        uses: golfzaptw/action-connect-ovpn@master
        id: connect_vpn
        with:
          PING_URL: "127.0.0.1"
          FILE_OVPN: ".github/vpn/staging.ovpn"
          TLS_KEY: ${{ secrets.TLS_KEY }}
        env:
          CA_CRT: ${{ secrets.CA_CRT}}
          USER_CRT: ${{ secrets.USER_CRT }}
          USER_KEY: ${{ secrets.USER_KEY }}

      - name: Login to Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.SERVICE_PRINCIPAL_CREDS }}

      - name: ACR Login
        run: az acr login --name ${{ env.ACR_REPO }}

      - name: Push Docker Image
        run: docker push ${{ env.ACR_REPO }}/${{ env.PREFIX }}:latest

      - name: Restart Azure Functions App
        run: az functionapp restart --resource-group ${{ env.RESOURCE_GROUP }} --name ${{ env.PREFIX }}-functionapp

      - name: Upload Static Site
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az storage blob upload-batch --account-name ${{ env.PREFIX }}public -d '$web' -s frontend/dist

  deploy_release_prod:
    name: "Deploy Release: PROD"
    needs:
      - build_release
      - build_frontend_release
    if: github.ref == 'refs/heads/production'
    environment: prod
    runs-on: ubuntu-latest
    env:
      RESOURCE_GROUP: prime-data-hub-prod
      ACR_REPO: pdhprodcontainerregistry.azurecr.io
      PREFIX: pdhprod
    steps:
      - name: "Check out changes"
        uses: actions/checkout@v2

      - name: Download Router Artifact
        uses: actions/download-artifact@v2
        with:
          name: prime-router-build-${{ github.run_id }}
          path: prime-router/build

      - name: Download Frontend Artifact
        uses: actions/download-artifact@v2
        with:
          name: static_website-${{ github.run_id }}
          path: frontend/dist

      - name: Build Docker Image
        run: docker build . --file Dockerfile --tag ${{ env.ACR_REPO }}/${{ env.PREFIX }}:latest

      - name: Install OpenVPN
        run: |
          sudo apt-get update
          sudo apt-get install openvpn
          sudo apt install openvpn-systemd-resolved

      - name: Connect VPN
        uses: golfzaptw/action-connect-ovpn@master
        id: connect_vpn
        with:
          PING_URL: "127.0.0.1"
          FILE_OVPN: ".github/vpn/prod.ovpn"
          TLS_KEY: ${{ secrets.TLS_KEY }}
        env:
          CA_CRT: ${{ secrets.CA_CRT}}
          USER_CRT: ${{ secrets.USER_CRT }}
          USER_KEY: ${{ secrets.USER_KEY }}

      - name: Login to Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.SERVICE_PRINCIPAL_CREDS }}

      - name: ACR Login
        run: az acr login --name ${{ env.ACR_REPO }}

      - name: Push Docker Image
        run: docker push ${{ env.ACR_REPO }}/${{ env.PREFIX }}:latest

      - name: Restart Azure Functions App
        run: az functionapp restart --resource-group ${{ env.RESOURCE_GROUP }} --name ${{ env.PREFIX }}-functionapp

      - name: Upload Static Site
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az storage blob upload-batch --account-name ${{ env.PREFIX }}public -d '$web' -s frontend/dist